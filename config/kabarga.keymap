/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };

&mt {
    quick_tap_ms = <200>;
    flavor = "tap-preferred";
    tapping-term-ms = <250>;
};

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------
            //| LGUI/] |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI/[ | 
            //| CTRL/` |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | CTRL/' |
            //| LALT/\ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT/- |
            //                             | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&mt LG(LC(Q)) GRAVE  &kp Q            &kp W           &kp E               &kp R         &kp T      &kp Y  &kp U         &kp I                &kp O            &kp P           &mt RIGHT_BRACKET LEFT_BRACKET
&mt LCTRL LC(B)      &mt LEFT_META A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LSHIFT F  &kp G      &kp H  &mt RSHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RMETA SEMI  &kp SQT
&mt LALT MINUS       &kp Z            &kp X           &kp C               &kp V         &kp B      &kp N  &kp M         &kp COMMA            &kp DOT          &kp FSLH        &mt RALT BACKSLASH
                                                      &lt 3 ESCAPE        &lt 2 SPACE   &lt 1 TAB         &lt 6 ENTER   &lt 5 BSPC           &lt 7 DEL
            >;
        };

        f {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans  &kp PRINTSCREEN  &kp F7  &kp F8  &kp F9  &kp F12  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans  &kp SCROLLLOCK   &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans           &kp F2  &kp F1  &kp F3  &kp F10  &trans
                            &trans     &trans     &trans                   &trans  &trans  &trans
            >;
        };

        arrows {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans  &trans    &trans         &trans        &trans       &trans   &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans  &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT    &trans   &trans
&trans  &trans    &trans    &trans     &trans     &trans  &kp INS   &kp PAGE_DOWN  &kp HOME      &kp PAGE_UP  &kp END  &trans
                            &trans     &trans     &trans            &trans         &trans        &trans
            >;
        };

        media {
            bindings = <
&trans  &trans      &trans        &trans      &trans           &trans      &trans      &trans           &trans      &trans        &trans      &trans
&trans  &kp K_PREV  &kp C_VOL_DN  &kp K_MUTE  &kp C_VOLUME_UP  &kp K_NEXT  &kp K_NEXT  &kp C_VOLUME_UP  &kp K_MUTE  &kp C_VOL_DN  &kp K_PREV  &trans
&trans  &trans      &trans        &trans      &trans           &trans      &trans      &trans           &trans      &trans        &trans      &trans
                                  &trans      &kp K_PP         &trans                  &trans           &kp K_PP    &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans  &trans     &trans     &trans    &trans    &trans
                            &mkp MB2   &mkp MB1   &mkp MB3          &mkp MB3   &mkp MB1   &trans
            >;
        };

        digits {
            bindings = <
&trans  &kp GRAVE  &kp N7  &kp N8   &kp N9  &kp BSLH   &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp LBKT   &kp N1  &kp N2   &kp N3  &kp RBKT   &trans  &trans     &trans     &trans    &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS          &trans     &trans     &trans
            >;
        };

        chars {
            bindings = <
&trans  &kp TILDE       &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp PIPE         &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS         &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp LEFT_BRACE  &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp RIGHT_BRACE  &trans  &trans     &trans     &trans    &trans    &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER                &trans     &trans     &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            //| BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR |
            //| BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //|pwrOFF|NUMLK|     |     |     |     |   |     |     |     |     |     |      |
            //                   |     |     |     |   |     |     |     |

            bindings = <
&bootloader        &none         &none         &none         &none         &none         &out OUT_BLE  &out OUT_USB  &out OUT_TOG  &none         &none         &bootloader
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&ext_power EP_OFF  &kp KP_NUM    &none         &none         &none         &check_bat    &none         &none         &none         &none         &none         &ext_power EP_OFF
                                               &trans        &none         &trans                      &trans        &none         &trans
            >;
        };
    };
};
